# {{ ansible_managed }}
{% if (config.disk_queue is defined) and config.disk_queue %}
# Setup disk assisted queues
$ActionQueueFileName fwdRule1     # unique name prefix for spool files
$ActionQueueMaxDiskSpace 1g       # 1gb space limit (use as much as possible)
$ActionQueueSaveOnShutdown on     # save messages to disk on shutdown
$ActionQueueType LinkedList       # run asynchronously
$ActionResumeRetryCount -1        # infinite retries if host is down
{% endif %}

{% if (config.tls_enable is defined) and config.tls_enable %}
# tls
$ActionSendStreamDriver gtls
$ActionSendStreamDriverMode 1
$DefaultNetstreamDriverCAFile {{ config.tls_CAFile }}
$DefaultNetstreamDriverCertFile {{ config.tls_CertFile }}
$DefaultNetstreamDriverKeyFile {{ config.tls_KeyFile }}

$ActionSendStreamDriverAuthMode {{ config.tls_AuthMode }}
{%  if config.tls_AuthMode == 'x509/name' %}
{%    for peer in config.tls_PermittedPeers %}
$ActionSendStreamDriverPermittedPeer {{ peer }}
{%    endfor %}
{%  endif %}
{% endif %}
{% if (config.use_fqdn is not defined) or ((config.use_fqdn is defined) and config.use_fqdn) %}
$PreserveFQDN on
{% endif %}

*.* @@{{ config.destinations[0] }};RSYSLOG_ForwardFormat
{# First destination is primary, rest is failover #}
{% if config.destinations|length > 1 %}
$ActionExecOnlyWhenPreviousIsSuspended on
{# for some strange reason, peers have to be defined again in this conditional action (bug?) #}
{% if (config.tls_enable is defined) and config.tls_enable %}
{%  if config.tls_AuthMode == 'x509/name' %}
{%    for peer in config.tls_PermittedPeers %}
$ActionSendStreamDriverPermittedPeer {{ peer }}
{%    endfor %}
{%  endif %}
{% endif %}
{%  for destination in config.destinations[1:] %}
& @@{{ destination }};RSYSLOG_ForwardFormat
{%  endfor %}
$ActionExecOnlyWhenPreviousIsSuspended off
{% endif %}
